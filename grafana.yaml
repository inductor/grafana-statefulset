apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-data
spec:
  capacity:
    storage: 2Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - inductor-nuc2
  local:
    path: /var/lib/grafana
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  serviceName: grafana
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      initContainers:
          - name: "init-chmod-data"
            image: debian:buster
            imagePullPolicy: "IfNotPresent"
            command: ["chmod", "777", "/var/lib/grafana"]
            volumeMounts:
            - name: grafana-data
              mountPath: "/var/lib/grafana"
      containers:
        - name: grafana
          image: grafana/grafana
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            # - name: config
            #   mountPath: "/etc/grafana/"
            # - name: dashboards
            #   mountPath: "/var/lib/grafana/dashboards"
            # - name: datasources
            #   mountPath: "/etc/grafana/provisioning/datasources/"
            # - name: dashboardproviders
            #   mountPath: "/etc/grafana/provisioning/dashboards/"
            - name: grafana-data
              mountPath: "/var/lib/grafana"
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
          envFrom:
            - secretRef:
                name: grafana-creds
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 9
            failureThreshold: 10
            periodSeconds: 10
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
  volumeClaimTemplates:
  - metadata:
      name: grafana-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "local"
      resources:
        requests:
          storage: 2Gi
      #   - name: config
      #     configMap:
      #       name: grafana-ini
      #   - name: datasources
      #     configMap:
      #       name: grafana-datasources
      #   - name: dashboardproviders
      #     configMap:
      #       name: grafana-dashboardproviders
      #   - name: dashboards
      #     configMap:
      #       name: dashboards
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: grafana-ingress
  namespace: monitoring
spec:
  virtualhost:
    fqdn: grafana.inductor.me
  routes:
    - conditions:
      - prefix: /
      services:
        - name: grafana
          port: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: monitoring
  name: grafana
  labels:
    app: grafana
spec:
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: grafana
  type: LoadBalancer